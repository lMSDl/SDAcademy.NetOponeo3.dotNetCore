@model IEnumerable<Models.User>


@{
    var title = "Users";
    //ViewData["Title"] = title;
    ViewBag.Title = title;

    var searchRoleList = Enum.GetValues<Models.Roles>().Select(x => new SelectListItem(x.ToString(), x.ToString())).ToList();
        searchRoleList.Insert(0, new SelectListItem(string.Empty, string.Empty));
}

<h2>@(string.IsNullOrWhiteSpace(title) ? "none" : title)</h2>

@Html.ActionLink(Localizer["Add"], "Add")

<div>

    @* <form> *@
       @using(@Html.BeginForm()) {
            @Localizer["Login"]<br>
            @Html.TextBox("search")<br>
            @Localizer["Role"]<br>
            @Html.DropDownList("roles", searchRoleList)<br>
            <input type="submit" value=@(Localizer["Search"]) />
       }
    @* </form> *@


    <table class="table">
        <thead>
            <tr>
                @await Html.PartialAsync("_UserHeader", (Models.User)null)
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    @await Html.PartialAsync("_UserDetails", item)
                    @* @await Html.PartialAsync("../Home/_UserDetails", item) *@
                    @* @await Html.PartialAsync("/Views/Home/_UserDetails.cshtml", item) *@
                    <td>
                        @if(Context.User.IsInRole(nameof(Models.Roles.Delete))) {
                            <a asp-action="Delete" asp-route-id=@item.Id>@Localizer["Delete"]</a>
                        }
                        @if(Context.User.IsInRole(nameof(Models.Roles.Update))) {
                            @Html.ActionLink(Localizer["Edit"], "Edit", new {id = item.Id})
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>